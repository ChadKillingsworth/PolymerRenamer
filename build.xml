<!--
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE
The complete set of authors may be found at http://polymer.github.io/AUTHORS
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS
-->

<project name="PolymerRenamer" basedir="." default="jar">

  <!-- Java 7 -->
  <property name="ant.build.javac.source" value="1.7"/>
  <property name="ant.build.javac.target" value="1.7"/>

  <property name="build.dir" value="build"/>
  <property name="buildtest.dir" value="buildtest"/>
  <property name="jar.file" value="PolymerRenamer.jar"/>

  <property name="mainclass.build" value="com.google.polymer.PolymerRenamer"/>
  <property name="mainclass.test" value="com.google.polymer.AllTests"/>

  <target name="init">
    <mkdir dir="${build.dir}"/>
  </target>

  <path id="libraries.path.jars">
    <fileset id="libraries.jars" dir="lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <path id="libraries-test.path.jars">
    <fileset dir="libtest">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <target name="compile" depends="init" description="Build the source">
    <javac
        destdir="${build.dir}"
        fork="true"
        includes="**/*.java"
        includeantruntime="false"
        srcdir="java">
      <classpath refid="libraries.path.jars"/>
    </javac>
  </target>

  <manifestclasspath property="jar.classpath" jarfile="${jar.file}">
    <classpath refid="libraries.path.jars"/>
  </manifestclasspath>

  <target name="jar" depends="compile" description="Build the JAR">
    <jar jarfile="${jar.file}" basedir="${build.dir}">
      <manifest>
        <attribute name="Main-Class" value="${mainclass.build}"/>
        <attribute name="Class-Path" value="${jar.classpath}"/>
      </manifest>
      <fileset refid="libraries.jars"/>
    </jar>
  </target>

  <target name="run" depends="jar" description="Run the JAR">
    <java fork="true" jar="${jar.file}">
      <arg line="${args}"/>
    </java>
  </target>

  <target name="init-test">
    <mkdir dir="${buildtest.dir}"/>
  </target>

  <target
      name="compile-test"
      depends="compile,init-test"
      description="Build the tests">
    <javac
        destdir="${buildtest.dir}"
        fork="true"
        includes="**/*.java"
        includeantruntime="false"
        srcdir="javatests">
      <classpath>
        <path refid="libraries.path.jars"/>
        <path refid="libraries-test.path.jars"/>
        <pathelement location="${build.dir}"/>
      </classpath>
    </javac>
  </target>

  <target
      name="run-tests"
      depends="compile-test"
      description="Compile the tests">
    <java fork="true" classname="org.junit.runner.JUnitCore">
      <classpath>
        <path refid="libraries.path.jars"/>
        <path refid="libraries-test.path.jars"/>
        <pathelement location="${build.dir}"/>
        <pathelement location="${buildtest.dir}"/>
      </classpath>
      <arg line="${mainclass.test}"/>
    </java>
  </target>

  <target name="clean" description="Clean the build">
    <delete dir="${build.dir}"/>
    <delete dir="${buildtest.dir}"/>
    <delete file="${jar.file}"/>
  </target>
</project>
